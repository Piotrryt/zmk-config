                DefaultColemak(0)
// ---------------------------------------------------------------------------------
//| ESC    |  Q  |  W  |  F  |  P  |  B  |||||  J  |  L  |  U  |  Y  |  ;  | BKSP   | 
//| TAB    |  A  |  R  |  S  |  T  |  G  |||||  M  |  N  |  E  |  I  |  O  |        |
//| SHFT   |  Z  |  X  |  C  |  D  |  V  |||||  K  |  H  |  ,  |  .  |  /  | SHFT   |
//              | GUI |ht(10)| SPC |CTRL ||||| (1) | ENT | (9) | ALT |

                ColemakInternational(1)
// ---------------------------------------------------------------------------------
//| ESC    |     |     |     |     |     |||||     |  Ł  |     |     |     | BKSP   |
//| TAB    |  Ą  |     |  Ś  |     |     |||||     |  Ń  |  Ę  |     |  Ó  |        |
//| SHFT   |  Ż  |  Ź  |  Ć  |     |     |||||     |     |     |     |     | SHFT   |
//               | GUI | (10)| SPC |CTRL ||||| (12)| ENT | (9) | ALT |

                Qwerty(2)
// ---------------------------------------------------------------------------------
//| ESC    |  Q  |  W  |  E  |  R  |  T  |||||  Y  |  U  |  I  |  O  |  P  | BKSP   |
//| TAB    |  A  |  S  |  D  |  F  |  G  |||||  H  |  J  |  K  |  L  |  ;  |  '     |
//| SHFT   |  Z  |  X  |  C  |  V  |  B  |||||  N  |  M  |  ,  |  .  |  /  | SHFT   |
//               | GUI | (10)| SPC |CTRL ||||| (6) | ENT | (9) | ALT |

                QwertyInternational(3)
//----------------------------------------------------------------------------------
//| ESC    |     |     |  Ę  |     |     |||||     |     |     |  Ó  |     | BKSP   |
//| TAB    |  Ą  |  Ś  |     |     |     |||||     |     |     |  Ł  |     |        |
//| SHFT   |  Ż  |  Ź  |  Ć  |     |     |||||  Ń  |     |     |     |     | SHFT   |
//               | GUI | (10)| SPC |CTRL ||||| (12)| ENT | (9) | ALT |


                NumAndSym(9)
// ---------------------------------------------------------------------------------
//|    `   |  1  |  2  |  3  |  4  |  5  |||||  6  |  7  |  8  |  9  |  0  |  \     |                
//|    ~   |  !  |  @  |  #  |  $  |  %  |||||  ^  |  &  |  *  |  (  |  )  | "|"    |      ; : ' "  <  > 
//|    _   |  -  |  +  |  =  |  {  |  }  |||||  [  |  ]  |  ,  |  .  |  /  |  ?     |
//               |SHFT |     | ALT |CTRL ||||| --- | --- | -X- | --- |

                FuncArrowSpec(10)
// ---------------------------------------------------------------------------------
//|   F1   | F2  | F3  | F4  | F5  | F6  ||||| F7  | F8  | F9  | F10 | F11 | BKSP   |
//|   F12  | F13 | F14 | F15 | F16 | F17 ||||| LFT | DWN |  UP | RGT | INS | DEL    |
//|   F18  | F19 | F20 | F21 | F22 | F23 ||||| HOM |PGDN |PGUP | END |KAPP | SHFT   |
//               | --- | -X- | --- | --- ||||| hGUI|a TAB|hCTRL|hALT |


                Techn(12)
// ---------------------------------------------------------------------------------
//|   (0)  | (2) | (4) |     |     |     |||||     |     |     |     |     | BKSP   |
//| BTCLR  | BT1 | BT2 | BT3 | BT4 | BT5 |||||     |     |     |     |     |        |
//| SHFT   |     |     |     |     |     |||||     |     |     |     |     |        |
//               | GUI |     | SPC | SPC ||||| ENT | ENT |     | ALT |


                
combosy są osobni definiowane  
przełącznie warstw np if- layer  też poza ke map 
&kp -po prostu key press
&mo - momentary layer jak shft do puki trzymasz 
&lt - layer-tap albo trzymam i warstwa albo tap i jakiś guzik (jest to hold-tap) 
&to - to layer przechodzi na wybrany i disable pozostałe 				
&tog jak caps			 	
&trans--przepuszcze dokolejnej aktywnej warstwy 
&none zatrzymuje przyciski 				
hold-tap tapping-term-ms 200ms
 hold-preferred default hold when time or another key pressed (&mt &ht_hp) &mt mod-tap
 balanced hold when time or key is pressed and released (&ht_bl)
 tap-preferred hold only when time (&ht_tp) 
 tap-unless-interrupted hold only when time NOt expired and another key is pressed  
 parametry 				
	tapping-term-ms 200ms - jak długo ma być wciśniety by był hold			
	flavor jedno w w/w
	quick-tap-ms minusowa wyłcza  doddatnia oznacza że jeżeli w tym czasie naciśniemy ten przycisk po drugi raz to zadziała jak tap
	global-quick-tap bool zminia to co wyżej że poprzedzający może być dowolnu klawisz
	retro-tap - jak wciśniemy i puścimy to tap o ile nic nie było wciśnięte pomiędzy
	hold-trigger-key-positions lista pozycji na klawiaturze która  wywołuje hold jak  jakiś z poza listy zawsze jako tap trohę fajne na home row trochę nie bo nie możan użyć na wiele modyfikatorów chuba że z 
	hold-trigger-on-release bool co spowalnie badanie elementów z listy
	
Toggle-on-Tap, Momentary-on-Hold Layers	
	#include <dt-bindings/zmk/keys.h>
#include <behaviors.dtsi>

#define MO_TOG(layer) &mo_tog layer layer   // Macro to apply momentary-layer-on-hold/toggle-layer-on-tap to a specific layer

/ {
    behaviors {
        mo_tog: behavior_mo_tog {
            compatible = "zmk,behavior-hold-tap";
            label = "mo_tog";
            #binding-cells = <2>;
            flavor = "hold-preferred";
            tapping-term-ms = <200>;
            bindings = <&mo>, <&tog>;
        };
    };

    keymap {
        compatible = "zmk,keymap";
        default_layer {
            bindings = <
                &mo_tog 2 1     // &mo 2 on hold, &tog 1 on tap
                MO_TOG(3)       // &mo 3 on hold, &tog 3 on tap
            >;
        };
    };
};
	
&mt mod-tap is hold tap hold-prefered 	
	
mod-morph co ma się stać jak naciśniemy klawisz z modyfikatorem 	
macros -- raczej nie bedę używał 
&kt key toggle jak 1 przyciśnięcie wciska drugie wyciska chyba że coś innego odciśnie raczej nie bedę używał 	
&sk sticky key pozostanie wciśniety do puki nie naciśnesz czegoś innego (osm)	 
&sl sticky layer (można połączyc z &sk )	
	
to puźniej będę rozkminiał
				
				
				Frogpad(4)
//----------------------------------------------------------------------------------    osm - przyciśnij i puść wciśniety do puki nie nacishnę następnego (stiky kwey )
//|  ESC   |  F  |  D  |  N  |  I  |  G  |||||  G  |  I  |  N  |  D  |  F  |  ESC   |	OSL(layer) - momentarily activates layer until the next key is pressed
/lt(10,bsp)|  S  |  T  |  H  |  E  |  O  |||||  O  |  E  |  H  |  T  |  S  |lt(10,bsp)  LT(layer, kc) - momentarily activates layer when held, and sends kc when tapped. 
//|osmSHFT |  C  |  W  |  R  |  A  |  U  |||||  U  |  A  |  R  |  W  |  C  |osmSHFT |                          
//               |osl 9|osl 8| SPC |lt11?||||| --- | SPC |osl 8|osl 9|
	
//---------------------------------------------------------------------------------- 
//|  ENT   |  J  |  K  |  M  |  '  |  -  |||||  -  |  '  |  M  |  K  |  J  |  ENT   |   -- to jest realizowane przez combosy ale tylko na tej warstwie frog pad 
/lt(10,bsp)|  Y  |  P  |  L  |  .  |  Q  |||||  Q  |  .  |  L  |  P  |  Y  |lt(10,bsp)   combo z SPC
//|osmSHFT |  X  |  B  |  V  |  ,  |  Z  |||||  Z  |  ,  |  V  |  B  |  X  |osmSHFT |
//               |     |     | -X- | --- ||||| --- | -X- |     |     |				
				Frogint(5)
//---------------------------------------------------------------------------------- 
//|        |     |     |  Ń  |     |     |||||     |     |  Ń  |     |     |        |
//|        |  Ś  |     |     |  Ę  |  Ó  |||||  Ó  |  Ę  |     |     |  Ś  |        |  
//|        |  Ć  |     |     |  Ą  |     |||||     |  Ą  |     |     |  Ć  |        |        
//               |     |     |     |     |||||     |     |     |     |
//---------------------------------------------------------------------------------- 
//|        |     |     |     |     |     |||||     |     |     |     |     |        |   combo z  tym czym s 
//|        |     |     |  Ł  |     |     |||||     |     |  Ł  |     |     |        |  
//|        |  Ź  |     |     |     |  Ż  |||||  Ż  |     |     |     |  Ź  |        |
//               |     |     |     |     |||||     |     |     |     |

				
				Frogsym(6)
//---------------------------------------------------------------------------------- 
//|  TAB   |  [  |  {  |  (  |  @  |  ^  |||||  ^  |  @  |  (  |  {  |  [  |  TAB   |
//|   \    |  :  |  ;  |  ?  |  !  |  /  |||||  /  |  !  |  ?  |  ;  |  :  |   \    |  
//|   ~    |  ]  |  }  |  )  |  &  |  *  |||||  *  |  &  |  )  |  }  |  ]  |   ~    |
//               | --- | --- | --- | --- ||||| --- | --- | --- | --- |					
				Frognum(7)
//---------------------------------------------------------------------------------- 
//|   =    |  6  |  7  |  8  |  9  |  .  |||||     |     |     |     |     |        |
//|   +    |  1  |  2  |  3  |  4  |  5  |||||     |     |     |     |     |        |  
//|   -    |  #  |  $  |  %  |  0  |  ,  |||||     |     |     |     |     |        |
//               | --- | ---|osmGUI| --- ||||| --- |osmGUI|--- | --- |
				Frogext(8)
//---------------------------------------------------------------------------------- 
//|        | BACK| HOM | UP  | END |FRWD |||||FRWD | END | UP  | HOM | BACK|        |
//|  -X-   |a TAB| LFT | DWN | RGT | DEL ||||| DEL | LFT | DWN | RGT |a TAB|  -X-   |  
//|        | c Z | c X | c C | c V |osmALT|||osmALT| c V | c C | c X | c Z |        |
//          |osmSHFT|osmCTRL|c BKSP| --- ||||| --- |c BKSP|osmCTRL|osmSHFT|


Letters 
 A B C D E F G H I J K L M N O P Q R S T U V W X Y Z
 Ą Ć Ę Ł Ń Ó Ś Ź Ż
numbers
 1 2 3 4 5 6 7 8 9 0
 ! @ # $ % ^ & * ( )
symbols punctuaction 
 ! @ # $ % ^ & * ( ) = + - _ / ? \ | ; : ' " , < . > [ { ] } ` ~
control whitespace
 ESC ENT SPC TAB BSPC DEL INS
navigation
 HOM END PGUP PGDN UP DWN LFT RGT KAPP GUI
modifiers
 SHFT CTRL LALT RALT GUI
locks 
 CAPS SLCK
f
F1 - F24  (anroid  f1-f12)
misc 
 PSCRN P/B -- pause break 
 
 
 https://holykeebs.com/pages/firmware
 
 https://kbd.news/artsey-and-ardux.io-1712.html